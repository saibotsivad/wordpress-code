<!-- saved from url=(0022)http://internet.e-mail -->
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml" >
<head>
	<title>'Split Page' 3 column Liquid Layout. Pixel widths. Cross-Browser. Equal Height Columns.</title>
	<meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" />
	<meta name="description" content="'Split Page' 3 column Liquid Layout. Pixel widths. Cross-Browser. Equal Height Columns." />
	<meta name="keywords" content="'Split Page' 3 column Liquid Layout. Pixel widths. Cross-Browser. Equal Height Columns." />
	<meta name="robots" content="index, follow" />
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
	<style media="screen" type="text/css">
	/* <!-- */
	/* General styles */
	body {
		margin:0;
		padding:0;
		border:0;		/* This removes the border around the viewport in old versions of IE */
		width:100%;
		background:#fff;
		min-width:600px;	/* Minimum width of layout - remove line if not required */
					/* The min-width property does not work in old versions of Internet Explorer */
		font-size:90%;
	}
	a {
		color:#369;
	}
	a:hover {
		color:#fff;
		background:#369;
		text-decoration:none;
	}
	h1, h2, h3 {
		margin:.8em 0 .2em 0;
		padding:0;
	}
	p {
		margin:.4em 0 .8em 0;
		padding:0;
	}
	img {
		margin:10px 0 5px;
	}
	/* Header styles */
	#header {
		clear:both;
		float:left;
		width:100%;
	}
	#header {
		border-bottom:1px solid #000;
	}
	#header p,
	#header h1,
	#header h2 {
		padding:.4em 15px 10px 15px;
		margin:0;
	}
	/* column container */
	#mask {
		position:relative;	/* This fixes the IE7 overflow hidden bug and stops the layout jumping out of place */
		clear:both;
		float:left;
		width:100%;			/* width of whole page */
		overflow:hidden;		/* This chops off any overhanging divs */
		background:#fff;
	}
	#colmid {
		float:left;
		width:200%;
		position:relative;
		left:50%;
		margin-left:-100px;
		background:#f6f;    	/* Centre column background colour */
	}
	#colright {
		float:left;
		width:100%;
		position:relative;
		left:200px;         	/* Left column width + right column width */
		background:#fff;    	/* Left column background colour */
	}
	#col1wrap {
		float:left;
		width:25%;
		position:relative;
		right:25%;
	}
	#col1 {
		margin:0 15px 0 115px;
		position:relative;
		right:200px;
		overflow:hidden;
	}
	#col2wrap {
		float:left;
		width:25%;
		position:relative;
		right:25%;
	}
	#col2 {
		margin:0 15px 0 115px;
		position:relative;
		right:100px;
		overflow:hidden;
	}
	#col3 {
		float:left;
		width:170px;        	/* Width of right column content (right column width minus left and right padding) */
		margin-left:-185px;  	/* Width of right column right-hand padding + left column left and right padding */
		position:relative;
		right:50%;
	}
	/* Footer styles */
	#footer {
		clear:both;
		float:left;
		width:100%;
		border-top:1px solid #000;
	}
	#footer p {
		padding:10px;
		margin:0;
	}
	/* --> */
	</style>
	<!--[if lt IE 8]>
	<style media="screen" type="text/css">
	#col1, #col2 {
		width:100%;
	}
	</style>
	<![endif]-->
</head>
<body>

<div id="header">
	<p><a href="http://matthewjamestaylor.com/blog/split-page-3-column-css-liquid-layout" title="'Split Page' 3 column CSS Liquid-Layout">&laquo; Back to the CSS article</a> by <a href="http://matthewjamestaylor.com">Matthew James Taylor</a></p>
	<h1>'Split Page' 3 Column CSS Liquid-Layout (Center: Fixed-Width, Left/Right: Fluid)</h1>
	<h2>No CSS hacks. SEO friendly 1-3-2 column order. Cross-browser. Equal height columns.</h2>
</div>
<div id="mask">
	<div id="colmid">
		<div id="colright">
			<div id="col1wrap">
				<div id="col1">
					<!-- Column 1 start -->
					<h2>Pixel dimensions of the Split Page layout</h2>
					<img src="http://matthewjamestaylor.com/blog/split-page-3-column-dimensions.gif" width="276" height="370" alt="Split Page 3 column layout dimensions" />
					<p>In this layout the center column width is in pixels and the left and right columns adjust in size to fill the rest of the screen. Vertical dimensions are left unset so they automatically stretch to the height of the content. Layouts that use pixel widths are great for images because you can make them fit perfectly within a column without gaps.</p>
					<h2>SEO friendly 1-3-2 column ordering</h2>
					<p>The higher up content is in your page code, the more important it is considered by search engine algorithms. To make your website as optimised as possible your main content must come before secondary content. This layout does exactly that: The left column comes first, then the right column and finally the narrow center column (see the nested div structure diagram for more info).</p>
					<h2>Equal height columns</h2>
					<p>It doesn't matter which column has the longest content, the background colour of all columns will stretch down to meet the footer. This feature was traditionally only available with table based layouts but now with a little CSS trickery we can do exactly the same with divs. Say goodbye to annoying short columns!</p>
					<h2>No Images</h2>
					<p>This layout requires no images. Many CSS website designs need images to colour in the column backgrounds but that is not necessary with this design. Why waste bandwidth and precious HTTP requests when you can do everything in pure CSS and XHTML?</p>
					<h2>No JavaScript</h2>
					<p>JavaScript is not required. Some website layouts rely on JavaScript hacks to resize divs and force elements into place but you won't see any of that nonsense here.</p>
					<!-- Column 1 end -->
				</div>
			</div>
			<div id="col2wrap">
				<div id="col2">
					<!-- Column 2 start -->
					<h2>The nested div structure</h2>
					<p>I've colour coded each div so it's easy to see:</p>
					<img src="http://matthewjamestaylor.com/blog/split-page-3-column-div-structure.gif" width="278" height="369" alt="3 Column 'Split Page' CSS Liquid-Layout" />
					<p>The header, colmask and footer divs are 100% wide and stacked vertically one after the other. Colmid is inside colmask and colright is inside colmid. The left and right content columns each have their own wrapper div and are inside colright. The center column does not need a wrapper and it is the last div in colright. Notice that the left and right content columns come before the center column, this is great for SEO.</p>
					<h2>No CSS hacks</h2>
					<p>The CSS used for this layout is 100% valid and hack free. To overcome Internet Explorer's broken box model, no horizontal padding or margins are used. Instead, this design uses pixel widths and clever relative positioning.</p>
					<h2>Valid XHTML strict markup</h2>
					<p>The HTML in this layout validates as XHTML 1.0 strict.</p>
					<h2>Resizable text compatible</h2>
					<p>This layout is fully compatible with resizable text. Resizable text is important for web accessibility. People who are vision impaired can make the text larger so it's easier for them to read. It is becoming increasingly more important to make your website resizable text compatible because people are expecting higher levels of web accessibility. Apple have made resizing the text on a website simple with the pinch gesture on their multi-touch trackpad. So far this trackpad is only available on the MacBook Air but it will soon be rolled out to all of their systems. Is your website text-resizing compatible?</p>
					<h2>This layout is FREE for anyone to use</h2>
					<p>You don't have to pay anything. Simply view the source of this page and save the HTML onto your computer. My only suggestion is to put the CSS into a separate file. If you are feeling generous however, link back to this page so other people can find and use this layout too.</p>
					<!-- Column 2 end -->
				</div>
			</div>
			<div id="col3">
				<!-- Column 3 start -->
				<h2>Google Ads compatible</h2>
				<p>This narrow center column is perfect for a tall Google Ad slot. If your main website content is on either side then users will be constantly looking across the center and are more likely to notice and click on the ads positioned here.</p>
				<h2>Full cross-browser support</h2>
				<p>The 3 column 'Split Page' liquid-layout has been tested on the following browsers:</p>
				<h3>iPhone &amp; iPod Touch</h3>
				<ul>
					<li>Safari</li>
				</ul>
				<h3>Mac</h3>
				<ul>
					<li>Safari</li>
					<li>Firefox</li>
					<li>Opera 9.25</li>
				</ul>
				<h3>Windows</h3>
				<ul>
					<li>Firefox 1.5, 2 &amp; 3</li>
					<li>Safari</li>
					<li>Opera 8.1 &amp; 9</li>
					<li>Explorer 5.5, 6 &amp; 7</li>
				</ul>
				<!-- Column 3 end -->
			</div>
		</div>
	</div>
</div>
<div id="footer">
	<p>This page uses the <a href="http://matthewjamestaylor.com/blog/split-page-3-column-liquid-layout.htm">'Split Page' 3 column CSS liquid-layout</a> by <a href="http://matthewjamestaylor.com">Matthew James Taylor</a>. View more <a href="http://matthewjamestaylor.com/blog/-website-layouts">website layouts</a> and <a href="http://matthewjamestaylor.com/blog/-web-design">web design articles</a>.</p>
</div>

<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-1848067-8";
urchinTracker();
</script>

</body>
</html>
